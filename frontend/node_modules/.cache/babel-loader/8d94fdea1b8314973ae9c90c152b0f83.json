{"ast":null,"code":"import _classCallCheck from \"D:\\\\Margo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Margo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Margo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Margo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Margo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Margo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Margo\\\\frontend\\\\src\\\\pages\\\\ChatPage\\\\ChatPage.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Row, Col } from 'antd';\nimport io from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { getChats, afterPostMessage } from \"../../actions/chat_actions\";\nimport ChatCard from \"./Sections/ChatCard\";\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\nexport var ChatPage = /*#__PURE__*/function (_Component) {\n  _inherits(ChatPage, _Component);\n\n  function ChatPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      chatMessage: \"\"\n    };\n\n    _this.hanleSearchChange = function (e) {\n      _this.setState({\n        chatMessage: e.target.value\n      });\n    };\n\n    _this.renderCards = function () {\n      return _this.props.chats.chats && _this.props.chats.chats.map(function (chat) {\n        return /*#__PURE__*/React.createElement(ChatCard, Object.assign({\n          key: chat._id\n        }, chat, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }\n        }));\n      });\n    };\n\n    _this.onDrop = function (files) {\n      console.log(files);\n\n      if (_this.props.user.userData && !_this.props.user.userData.isAuth) {\n        return alert('Please Log in first');\n      }\n\n      var formData = new FormData();\n      var config = {\n        header: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      formData.append(\"file\", files[0]);\n      Axios.post('api/chat/uploadfiles', formData, config).then(function (response) {\n        if (response.data.success) {\n          var chatMessage = response.data.url;\n          var userId = _this.props.user.userData._id;\n          var userName = _this.props.user.userData.name;\n          var userImage = _this.props.user.userData.image;\n          var nowTime = moment();\n          var type = \"VideoOrImage\";\n\n          _this.socket.emit(\"Input Chat Message\", {\n            chatMessage: chatMessage,\n            userId: userId,\n            userName: userName,\n            userImage: userImage,\n            nowTime: nowTime,\n            type: type\n          });\n        }\n      });\n    };\n\n    _this.submitChatMessage = function (e) {\n      e.preventDefault();\n\n      if (_this.props.user.userData && !_this.props.user.userData.isAuth) {\n        return alert('Please Log in first');\n      }\n\n      var chatMessage = _this.state.chatMessage;\n      var userId = _this.props.user.userData._id;\n      var userName = _this.props.user.userData.name;\n      var userImage = _this.props.user.userData.image;\n      var nowTime = moment();\n      var type = \"Text\";\n\n      _this.socket.emit(\"Input Chat Message\", {\n        chatMessage: chatMessage,\n        userId: userId,\n        userName: userName,\n        userImage: userImage,\n        nowTime: nowTime,\n        type: type\n      });\n\n      _this.setState({\n        chatMessage: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var server = \"http://localhost:5000\";\n      this.props.dispatch(getChats());\n      this.socket = io(server);\n      this.socket.on(\"Output Chat Message\", function (messageFromBackEnd) {\n        console.log(messageFromBackEnd);\n\n        _this2.props.dispatch(afterPostMessage(messageFromBackEnd));\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.messagesEnd.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontSize: '2rem',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, \" Real Time Chat\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxWidth: '800px',\n          margin: '0 auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"infinite-container\",\n        style: {\n          height: '500px',\n          overflowY: 'scroll'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, this.props.chats && this.renderCards(), /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this3.messagesEnd = el;\n        },\n        style: {\n          float: \"left\",\n          clear: \"both\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        layout: \"inline\",\n        onSubmit: this.submitChatMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 18,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        id: \"message\",\n        prefix: /*#__PURE__*/React.createElement(Icon, {\n          type: \"message\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 45\n          }\n        }),\n        placeholder: \"Let's start talking\",\n        type: \"text\",\n        value: this.state.chatMessage,\n        onChange: this.hanleSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        span: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Dropzone, {\n        onDrop: this.onDrop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps;\n        return /*#__PURE__*/React.createElement(\"section\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 49\n          }\n        })), /*#__PURE__*/React.createElement(Button, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          type: \"upload\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 53\n          }\n        }))));\n      })), /*#__PURE__*/React.createElement(Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          width: '100%'\n        },\n        onClick: this.submitChatMessage,\n        htmlType: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"enter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 37\n        }\n      })))))));\n    }\n  }]);\n\n  return ChatPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    chats: state.chat\n  };\n};\n\nexport default connect(mapStateToProps)(ChatPage);","map":{"version":3,"sources":["D:/Margo/frontend/src/pages/ChatPage/ChatPage.js"],"names":["React","Component","Form","Icon","Input","Button","Row","Col","io","connect","moment","getChats","afterPostMessage","ChatCard","Dropzone","Axios","ChatPage","state","chatMessage","hanleSearchChange","e","setState","target","value","renderCards","props","chats","map","chat","_id","onDrop","files","console","log","user","userData","isAuth","alert","formData","FormData","config","header","append","post","then","response","data","success","url","userId","userName","name","userImage","image","nowTime","type","socket","emit","submitChatMessage","preventDefault","server","dispatch","on","messageFromBackEnd","messagesEnd","scrollIntoView","behavior","fontSize","textAlign","maxWidth","margin","height","overflowY","el","float","clear","color","getRootProps","getInputProps","width","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Row, Col, } from 'antd';\nimport io from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { getChats, afterPostMessage } from \"../../actions/chat_actions\"\nimport ChatCard from \"./Sections/ChatCard\"\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\n\nexport class ChatPage extends Component {\n    state = {\n        chatMessage: \"\",\n    }\n\n    componentDidMount() {\n        let server = \"http://localhost:5000\";\n\n        this.props.dispatch(getChats());\n\n        this.socket = io(server);\n\n        this.socket.on(\"Output Chat Message\", messageFromBackEnd => {\n            console.log(messageFromBackEnd)\n            this.props.dispatch(afterPostMessage(messageFromBackEnd));\n        })\n    }\n\n    componentDidUpdate() {\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    hanleSearchChange = (e) => {\n        this.setState({\n            chatMessage: e.target.value\n        })\n    }\n\n    renderCards = () =>\n        this.props.chats.chats\n        && this.props.chats.chats.map((chat) => (\n            <ChatCard key={chat._id}  {...chat} />\n        ));\n\n    onDrop = (files) => {\n        console.log(files)\n\n\n        if (this.props.user.userData && !this.props.user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n\n\n\n        let formData = new FormData;\n\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n\n        formData.append(\"file\", files[0])\n\n        Axios.post('api/chat/uploadfiles', formData, config)\n            .then(response => {\n                if (response.data.success) {\n                    let chatMessage = response.data.url;\n                    let userId = this.props.user.userData._id\n                    let userName = this.props.user.userData.name;\n                    let userImage = this.props.user.userData.image;\n                    let nowTime = moment();\n                    let type = \"VideoOrImage\"\n\n                    this.socket.emit(\"Input Chat Message\", {\n                        chatMessage,\n                        userId,\n                        userName,\n                        userImage,\n                        nowTime,\n                        type\n                    });\n                }\n            })\n    }\n\n\n    submitChatMessage = (e) => {\n        e.preventDefault();\n\n        if (this.props.user.userData && !this.props.user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n\n\n\n\n        let chatMessage = this.state.chatMessage\n        let userId = this.props.user.userData._id\n        let userName = this.props.user.userData.name;\n        let userImage = this.props.user.userData.image;\n        let nowTime = moment();\n        let type = \"Text\"\n\n        this.socket.emit(\"Input Chat Message\", {\n            chatMessage,\n            userId,\n            userName,\n            userImage,\n            nowTime,\n            type\n        });\n        this.setState({ chatMessage: \"\" })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div>\n                    <p style={{ fontSize: '2rem', textAlign: 'center' }}> Real Time Chat</p>\n                </div>\n\n                <div style={{ maxWidth: '800px', margin: '0 auto' }}>\n                    <div className=\"infinite-container\" style={{ height: '500px', overflowY: 'scroll' }}>\n                        {this.props.chats && (\n                            this.renderCards()\n                        )}\n                        <div\n                            ref={el => {\n                                this.messagesEnd = el;\n                            }}\n                            style={{ float: \"left\", clear: \"both\" }}\n                        />\n                    </div>\n\n                    <Row >\n                        <Form layout=\"inline\" onSubmit={this.submitChatMessage}>\n                            <Col span={18}>\n                                <Input\n                                    id=\"message\"\n                                    prefix={<Icon type=\"message\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Let's start talking\"\n                                    type=\"text\"\n                                    value={this.state.chatMessage}\n                                    onChange={this.hanleSearchChange}\n                                />\n                            </Col>\n                            <Col span={2}>\n                                <Dropzone onDrop={this.onDrop}>\n                                    {({ getRootProps, getInputProps }) => (\n                                        <section>\n                                            <div {...getRootProps()}>\n                                                <input {...getInputProps()} />\n                                                <Button>\n                                                    <Icon type=\"upload\" />\n                                                </Button>\n                                            </div>\n                                        </section>\n                                    )}\n                                </Dropzone>\n                            </Col>\n\n                            <Col span={4}>\n                                <Button type=\"primary\" style={{ width: '100%' }} onClick={this.submitChatMessage} htmlType=\"submit\">\n                                    <Icon type=\"enter\" />\n                                </Button>\n                            </Col>\n                        </Form>\n                    </Row>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        chats: state.chat\n    }\n}\n\n\nexport default connect(mapStateToProps)(ChatPage);\n"]},"metadata":{},"sourceType":"module"}