{"ast":null,"code":"/*import React, {useContext} from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { signOut } from '../../actions/authAction';\nimport AuthService from '../../actions/authAction';\nimport './style.css';\n\nfunction toggleNav(e) {\n  const slider = document.getElementsByClassName('slider')[0];\n  const burger = document.getElementsByClassName('burger')[0];\n  const list = document.getElementsByClassName('list')[0];\n  document.getElementById('root').style.overflow = 'hidden';\n  burger.classList.toggle('burger-active')\n  slider.classList.toggle('active')\n  list.childNodes.forEach((e, index) => {\n    if (e.style.animation)\n      e.style.animation = ''\n    else\n      e.style.animation = `listItemFade 0.5s ease forwards ${index / 5 + 0.3}s`;\n  });\n}\nconst Navbar = props => {\n  \n\n  const unauthenticatedNavBar = () =>{\n    return(\n      <>\n      <Link onClick={() => toggleNav()} to=\"/movies\">Home</Link>\n      <Link onClick={() => toggleNav()} to=\"/movies/schedule\">Schedule</Link>\n      <Link onClick={() => toggleNav()} to=\"/chat\">Chat</Link>\n      <Link onClick={() => toggleNav()} to=\"/login\">Login</Link>\n      <Link onClick={() => toggleNav()} to=\"/resigter\">Register</Link>\n      </>\n    )\n  }\n\nconst onClickLogoutHandler = (e) =>{\n  const slider = document.getElementsByClassName('slider')[0];\n  const burger = document.getElementsByClassName('burger')[0];\n  const list = document.getElementsByClassName('list')[0];\n  document.getElementById('root').style.overflow = 'hidden';\n  burger.classList.toggle('burger-active')\n  slider.classList.toggle('active')\n  list.childNodes.forEach((e, index) => {\n    if (e.style.animation)\n      e.style.animation = ''\n    else\n      e.style.animation = `listItemFade 0.5s ease forwards ${index / 5 + 0.3}s`;\n    });\n  AuthService.logout().then(data=>{\n    if(data.success){\n        setUser(data.user);\n        setIsAuthenticated(false);\n    }\n  })\n}\n\n  const authenticatedNavBar = () => {\n    return(\n      <>\n      <Link onClick={() => toggleNav()} to=\"/movies\">Home</Link>\n      \n      <Link onClick={() => toggleNav()} to=\"/movies/schedule\">Schedule</Link>\n      <Link onClick={() => toggleNav()} to=\"/chat\">Chat</Link>\n      <Link onClick={onClickLogoutHandler} to=\"/\">LogOut</Link>\n\n      { user.role === 'admin' ?\n      <Link onClick={() => toggleNav()} to=\"/movies/addmovie\">Add movies</Link> : null\n      }\n      </>\n    )\n  }\n  return (\n    <nav className=\"nav-wrapper\">\n      <div className=\"burger\" onClick={e => toggleNav(e)}>\n        <div className='line1'></div>\n        <div className='line2'></div>\n        <div className='line3'></div>\n      </div>\n      {// <Link className=\"nav-brand\" to=\"/\">iCinema</Link> }\n      <div className='slider'>\n        <ul className='list'>\n          {!isAuthenticated ? unauthenticatedNavBar() : authenticatedNavBar()}\n          \n        </ul>\n      </div>\n    </nav>\n  )\n}\nconst mapStateToProps = state => {\n  return {\n    loggedIn: state.auth.loggedIn\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)*/","map":{"version":3,"sources":["D:/Margo/frontend/src/components/Navbar/index.js"],"names":[],"mappings":"AAAA","sourcesContent":["/*import React, {useContext} from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { signOut } from '../../actions/authAction';\nimport AuthService from '../../actions/authAction';\nimport './style.css';\n\nfunction toggleNav(e) {\n  const slider = document.getElementsByClassName('slider')[0];\n  const burger = document.getElementsByClassName('burger')[0];\n  const list = document.getElementsByClassName('list')[0];\n  document.getElementById('root').style.overflow = 'hidden';\n  burger.classList.toggle('burger-active')\n  slider.classList.toggle('active')\n  list.childNodes.forEach((e, index) => {\n    if (e.style.animation)\n      e.style.animation = ''\n    else\n      e.style.animation = `listItemFade 0.5s ease forwards ${index / 5 + 0.3}s`;\n  });\n}\nconst Navbar = props => {\n  \n\n  const unauthenticatedNavBar = () =>{\n    return(\n      <>\n      <Link onClick={() => toggleNav()} to=\"/movies\">Home</Link>\n      <Link onClick={() => toggleNav()} to=\"/movies/schedule\">Schedule</Link>\n      <Link onClick={() => toggleNav()} to=\"/chat\">Chat</Link>\n      <Link onClick={() => toggleNav()} to=\"/login\">Login</Link>\n      <Link onClick={() => toggleNav()} to=\"/resigter\">Register</Link>\n      </>\n    )\n  }\n\nconst onClickLogoutHandler = (e) =>{\n  const slider = document.getElementsByClassName('slider')[0];\n  const burger = document.getElementsByClassName('burger')[0];\n  const list = document.getElementsByClassName('list')[0];\n  document.getElementById('root').style.overflow = 'hidden';\n  burger.classList.toggle('burger-active')\n  slider.classList.toggle('active')\n  list.childNodes.forEach((e, index) => {\n    if (e.style.animation)\n      e.style.animation = ''\n    else\n      e.style.animation = `listItemFade 0.5s ease forwards ${index / 5 + 0.3}s`;\n    });\n  AuthService.logout().then(data=>{\n    if(data.success){\n        setUser(data.user);\n        setIsAuthenticated(false);\n    }\n  })\n}\n\n  const authenticatedNavBar = () => {\n    return(\n      <>\n      <Link onClick={() => toggleNav()} to=\"/movies\">Home</Link>\n      \n      <Link onClick={() => toggleNav()} to=\"/movies/schedule\">Schedule</Link>\n      <Link onClick={() => toggleNav()} to=\"/chat\">Chat</Link>\n      <Link onClick={onClickLogoutHandler} to=\"/\">LogOut</Link>\n\n      { user.role === 'admin' ?\n      <Link onClick={() => toggleNav()} to=\"/movies/addmovie\">Add movies</Link> : null\n      }\n      </>\n    )\n  }\n  return (\n    <nav className=\"nav-wrapper\">\n      <div className=\"burger\" onClick={e => toggleNav(e)}>\n        <div className='line1'></div>\n        <div className='line2'></div>\n        <div className='line3'></div>\n      </div>\n      {// <Link className=\"nav-brand\" to=\"/\">iCinema</Link> }\n      <div className='slider'>\n        <ul className='list'>\n          {!isAuthenticated ? unauthenticatedNavBar() : authenticatedNavBar()}\n          \n        </ul>\n      </div>\n    </nav>\n  )\n}\nconst mapStateToProps = state => {\n  return {\n    loggedIn: state.auth.loggedIn\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)*/"]},"metadata":{},"sourceType":"module"}