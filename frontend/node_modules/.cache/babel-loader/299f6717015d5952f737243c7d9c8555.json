{"ast":null,"code":"import _defineProperty from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\src\\\\pages\\\\Login\\\\index.js\";\n\nimport React, { useState, useContext } from 'react';\nimport AuthService from '../../actions/authAction';\nimport Joi from '@hapi/joi';\nimport _ from 'lodash';\nimport Input from '../../components/common/Input';\nimport { connect } from 'react-redux';\nimport Button from '../../components/common/Button';\nimport './style.css';\nimport { AuthContext } from '../../Context/AuthContext';\n\nvar Login = function Login(props) {\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var authContext = useContext(AuthContext);\n\n  var handleChange = function handleChange(e) {\n    e.preventDefault();\n    setUser(_objectSpread({}, user, _defineProperty({}, e.target.name, e.target.value)));\n    console.log(user);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"background-container pt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"Username\",\n    label: \"Username\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Please enter your username...\",\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    onChange: handleChange,\n    placeholder: \"Please enter your password...\",\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    label: \"Login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Login;\n/*\nclass Login extends React.Component {\n  state = {\n    data: {\n      usesrname: '',\n      password: ''\n    },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string().username().required().label('Username'),\n    password: Joi.string().required().label('Password')\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  validateProperty = input => {\n    const { name, value } = input;\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const result = Joi.validate(this.state.data, this.schema, options);\n    if (!result.error) return null;\n\n    const errors = {};\n    result.error.details.forEach(\n      element => (errors[element.path[0]] = element.message)\n    );\n    return errors;\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const errors = this.validate();\n    if (_.isEmpty(errors)) this.props.signIn(this.state.data);\n  };\n\n  render() {\n    const { data, errors } = this.state;\n    const { email, password } = data;\n    const { authMessage, loggedIn } = this.props;\n    if (loggedIn) this.props.history.push('/');\n    return (\n      <div className='background-container pt-5'>\n        <div className='container'>\n          <h1 className='header'>Login</h1>\n          <form onSubmit={this.handleSubmit}>\n            <Input\n              name='email'\n              label='Email'\n              type='email'\n              error={errors['email']}\n              iconClass='fas fa-envelope'\n              onChange={this.handleChange}\n              placeholder='Please enter your email...'\n              value={email}\n              autoFocus\n            />\n            <Input\n              name='password'\n              type='password'\n              label='Password'\n              error={errors['password']}\n              iconClass='fas fa-key'\n              onChange={this.handleChange}\n              placeholder='Please enter your password...'\n              value={password}\n            />\n            {authMessage && <p className='text-white'>{authMessage}</p>}\n            <Button disabled={this.validate()} type='submit' label='Login'/>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loggedIn: state.auth.loggedIn,\n    authMessage: state.auth.authMessage\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);\n*/","map":{"version":3,"sources":["D:/iCinema-master/iCinema-master/frontend/src/pages/Login/index.js"],"names":["React","useState","useContext","AuthService","Joi","_","Input","connect","Button","AuthContext","Login","props","username","password","user","setUser","message","setMessage","authContext","handleChange","e","preventDefault","target","name","value","console","log","handleSubmit"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAO,aAAP;AACA,SAAQC,WAAR,QAA0B,2BAA1B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAG;AAAA,kBACIV,QAAQ,CAAC;AAACW,IAAAA,QAAQ,EAAC,EAAV;AAAcC,IAAAA,QAAQ,EAAC;AAAvB,GAAD,CADZ;AAAA;AAAA,MACbC,IADa;AAAA,MACPC,OADO;;AAAA,mBAEUd,QAAQ,CAAC,IAAD,CAFlB;AAAA;AAAA,MAEbe,OAFa;AAAA,MAEJC,UAFI;;AAGpB,MAAMC,WAAW,GAAGhB,UAAU,CAACO,WAAD,CAA9B;;AAEA,MAAMU,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAG;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,OAAO,mBAAKD,IAAL,sBAAYM,CAAC,CAACE,MAAF,CAASC,IAArB,EAA6BH,CAAC,CAACE,MAAF,CAASE,KAAtC,GAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAM,IAAA,QAAQ,EAAEa,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,QAAQ,EAAER,YAJZ;AAKE,IAAA,WAAW,EAAC,+BALd;AAME,IAAA,SAAS,EAAC,cANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,QAAQ,EAAEA,YAJZ;AAKE,IAAA,WAAW,EAAC,+BALd;AAME,IAAA,SAAS,EAAC,cANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAiBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CAFF,CADJ,CADF;AA2BD,CAtCD;;AAwCA,eAAeT,KAAf;AAEA","sourcesContent":["import React, {useState, useContext} from 'react';\nimport AuthService from '../../actions/authAction'\nimport Joi from '@hapi/joi';\nimport _ from 'lodash';\n\nimport Input from '../../components/common/Input';\nimport { connect } from 'react-redux';\nimport Button from '../../components/common/Button';\nimport './style.css';\nimport {AuthContext} from '../../Context/AuthContext'\n\nconst Login = props =>{\n  const [user, setUser] = useState({username:\"\", password:\"\"});\n  const [message, setMessage] = useState(null);\n  const authContext = useContext(AuthContext);\n\n  const handleChange = e =>{\n    e.preventDefault();\n    setUser({...user, [e.target.name] : e.target.value});\n    console.log(user);\n  }\n\n  return(\n    <div className='background-container pt-5'>\n        <div className='container'>\n          <h1 >Login</h1>\n          <form onSubmit={handleSubmit}>\n            <input\n              name='Username'\n              label='Username'\n              type='text' \n              onChange={handleChange}\n              placeholder='Please enter your username...'\n              className=\"form-control\"\n            />\n            <input\n              name='password'\n              type='password'\n              label='Password'\n              onChange={handleChange}\n              placeholder='Please enter your password...'\n              className=\"form-control\"\n            />\n            <Button type='submit' label='Login'/>\n          </form>\n          {/*message ? <Message message={message}/>:null*/}\n        </div>\n      </div>\n  )\n}\n\nexport default Login;\n\n/*\nclass Login extends React.Component {\n  state = {\n    data: {\n      usesrname: '',\n      password: ''\n    },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string().username().required().label('Username'),\n    password: Joi.string().required().label('Password')\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  validateProperty = input => {\n    const { name, value } = input;\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const result = Joi.validate(this.state.data, this.schema, options);\n    if (!result.error) return null;\n\n    const errors = {};\n    result.error.details.forEach(\n      element => (errors[element.path[0]] = element.message)\n    );\n    return errors;\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const errors = this.validate();\n    if (_.isEmpty(errors)) this.props.signIn(this.state.data);\n  };\n\n  render() {\n    const { data, errors } = this.state;\n    const { email, password } = data;\n    const { authMessage, loggedIn } = this.props;\n    if (loggedIn) this.props.history.push('/');\n    return (\n      <div className='background-container pt-5'>\n        <div className='container'>\n          <h1 className='header'>Login</h1>\n          <form onSubmit={this.handleSubmit}>\n            <Input\n              name='email'\n              label='Email'\n              type='email'\n              error={errors['email']}\n              iconClass='fas fa-envelope'\n              onChange={this.handleChange}\n              placeholder='Please enter your email...'\n              value={email}\n              autoFocus\n            />\n            <Input\n              name='password'\n              type='password'\n              label='Password'\n              error={errors['password']}\n              iconClass='fas fa-key'\n              onChange={this.handleChange}\n              placeholder='Please enter your password...'\n              value={password}\n            />\n            {authMessage && <p className='text-white'>{authMessage}</p>}\n            <Button disabled={this.validate()} type='submit' label='Login'/>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loggedIn: state.auth.loggedIn,\n    authMessage: state.auth.authMessage\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);\n*/"]},"metadata":{},"sourceType":"module"}