{"ast":null,"code":"import _defineProperty from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\src\\\\pages\\\\Register\\\\index.js\";\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport AuthService from '../../actions/authAction';\nimport Message from '../../components/Message';\nimport Joi from '@hapi/joi';\nimport _ from 'lodash';\nimport Input from '../../components/common/Input';\nimport { connect } from 'react-redux';\nimport Button from '../../components/common/Button';\nimport { AuthContext } from '../../Context/AuthContext';\n\nvar Register = function Register(props) {\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var timeID = useRef(null);\n  useEffect(function () {\n    return function () {\n      clearTimeout(timeID);\n    };\n  }, []);\n\n  var handleChange = function handleChange(e) {\n    e.preventDefault();\n    setUser(_objectSpread({}, user, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var resetForm = function resetForm() {\n    setUser({\n      username: \"\",\n      passwor: \"\",\n      role: \"\"\n    });\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    AuthService.register(user).then(function (data) {\n      var message = data.message;\n      setMessage(message);\n      resetForm();\n\n      if (!message.msgError) {\n        timerID = setTimeout(function () {\n          props.history.push('/login');\n        }, 2000);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"background-container pt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    label: \"username\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Please enter your username...\",\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    onChange: handleChange,\n    placeholder: \"Please enter your password...\",\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    label: \"Register\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), message ? /*#__PURE__*/React.createElement(Message, {\n    message: message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 22\n    }\n  }) : null));\n};\n\nexport default Register;\n/*class RegisterForm extends React.Component {\n  state = { \n    data:{\n      email:'',\n      password:'',\n      passwordRepeat:''\n    },\n    errors:{},\n    passwordError: ''\n  }\n  validateProperty = input => {\n    const { name, value } = input;\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const result = Joi.validate(this.state.data, this.schema, options);\n    if (!result.error) return null;\n\n    const errors = {};\n    result.error.details.forEach( element => (errors[element.path[0]] = element.message));\n    return errors;\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { password, passwordRepeat, email } = this.state.data;\n    if(password !== passwordRepeat) this.setState({ passwordError: 'The passwords doesn not match.' });\n    else this.props.signUp({ email, password });\n  } \n\n  schema = {\n    email: Joi.string().email().required().label('Email'),\n    password: Joi.string().min(8).required().label('Password'),\n    passwordRepeat: Joi.string().required().label('Repear Password'),\n  }\n  render() { \n    const { authMessage, loggedIn } = this.props;\n    const { errors, passwordError } = this.state;\n    const { email, password, passwordRepeat } = this.state.data;\n    if(loggedIn) this.props.history.push('/');\n\n    return ( \n      <div className='background-container pt-5'>\n        <div className='container'>\n          <h1 className='header'>Register Form</h1>\n          <form onSubmit={this.handleSubmit}>\n            <Input \n                name='email' \n                label='Email' \n                type='email'\n                error={errors['email']}\n                iconClass='fas fa-envelope'\n                onChange={this.handleChange}\n                placeholder='Please enter your email...'\n                value={email}\n                autoFocus\n            />\n            <Input \n                name='password' \n                label='Password' \n                type='password'\n                error={errors['password']}\n                iconClass='fas fa-key'\n                onChange={this.handleChange}\n                placeholder='Please enter your password...'\n                value={password}\n            /> \n            <Input \n                name='passwordRepeat' \n                type='password'\n                label='Repeat Password' \n                error={errors['passwordRepeat']}\n                iconClass='fas fa-key'\n                onChange={this.handleChange}\n                placeholder='Repeat your password...'\n                value={passwordRepeat}\n            /> \n            { authMessage || passwordError ? <p className='bg-info text-white'> {authMessage} {passwordError}</p> : <> </>}\n            <button type='submit' className='btn special-btn' disabled={this.validate()}>  Sign Up </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return { \n    loggedIn: state.auth.loggedIn,\n    authMessage: state.auth.authMessage\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))  \n  }\n}\n\n \nexport default connect(mapStateToProps, mapDispatchToProps) (RegisterForm);*/","map":{"version":3,"sources":["D:/iCinema-master/iCinema-master/frontend/src/pages/Register/index.js"],"names":["React","useState","useRef","useEffect","AuthService","Message","Joi","_","Input","connect","Button","AuthContext","Register","props","username","password","user","setUser","message","setMessage","timeID","clearTimeout","handleChange","e","preventDefault","target","name","value","resetForm","passwor","role","handleSubmit","register","then","data","msgError","timerID","setTimeout","history","push"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\nimport AuthService from '../../actions/authAction';\nimport Message from '../../components/Message';\nimport Joi from '@hapi/joi';\nimport _ from 'lodash';\nimport Input from '../../components/common/Input';\nimport { connect } from 'react-redux';\nimport Button from '../../components/common/Button';\nimport {AuthContext} from '../../Context/AuthContext'\n\nconst Register = props =>{\n  const [user, setUser] = useState({username:\"\", password:\"\"});\n  const [message, setMessage] = useState(null);\n  let timeID = useRef(null)\n\n  useEffect(()=>{\n    return()=>{\n        clearTimeout(timeID);\n    }\n  },[]);\n\n  const handleChange = e =>{\n    e.preventDefault();\n    setUser({...user, [e.target.name] : e.target.value});\n  }\n \n  const resetForm =() =>{\n    setUser({username:\"\", passwor : \"\", role: \"\"});\n  }\n\n\n  const handleSubmit = e =>{\n    e.preventDefault();\n    AuthService.register(user).then(data =>{\n        const {message} = data;\n        setMessage(message);\n        resetForm();\n        if(!message.msgError){\n          timerID = setTimeout(()=>{\n            props.history.push('/login')\n          }, 2000)\n        }\n    })\n  }\n\n  return(\n    <div className='background-container pt-5'>\n        <div className='container'>\n          <h1 >Register</h1>\n          <form onSubmit={handleSubmit}>\n            <input\n              name='username'\n              label='username'\n              type='text' \n              onChange={handleChange}\n              placeholder='Please enter your username...'\n              className=\"form-control\"\n            />\n            <input\n              name='password'\n              type='password'\n              label='Password'\n              onChange={handleChange}\n              placeholder='Please enter your password...'\n              className=\"form-control\"\n            />\n            <Button type='submit' label='Register'/>\n          </form>\n          {message ? <Message message={message}/>:null}\n        </div>\n      </div>\n  )\n}\n\nexport default Register;\n\n\n/*class RegisterForm extends React.Component {\n  state = { \n    data:{\n      email:'',\n      password:'',\n      passwordRepeat:''\n    },\n    errors:{},\n    passwordError: ''\n  }\n  validateProperty = input => {\n    const { name, value } = input;\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const result = Joi.validate(this.state.data, this.schema, options);\n    if (!result.error) return null;\n\n    const errors = {};\n    result.error.details.forEach( element => (errors[element.path[0]] = element.message));\n    return errors;\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { password, passwordRepeat, email } = this.state.data;\n    if(password !== passwordRepeat) this.setState({ passwordError: 'The passwords doesn not match.' });\n    else this.props.signUp({ email, password });\n  } \n\n  schema = {\n    email: Joi.string().email().required().label('Email'),\n    password: Joi.string().min(8).required().label('Password'),\n    passwordRepeat: Joi.string().required().label('Repear Password'),\n  }\n  render() { \n    const { authMessage, loggedIn } = this.props;\n    const { errors, passwordError } = this.state;\n    const { email, password, passwordRepeat } = this.state.data;\n    if(loggedIn) this.props.history.push('/');\n\n    return ( \n      <div className='background-container pt-5'>\n        <div className='container'>\n          <h1 className='header'>Register Form</h1>\n          <form onSubmit={this.handleSubmit}>\n            <Input \n                name='email' \n                label='Email' \n                type='email'\n                error={errors['email']}\n                iconClass='fas fa-envelope'\n                onChange={this.handleChange}\n                placeholder='Please enter your email...'\n                value={email}\n                autoFocus\n            />\n            <Input \n                name='password' \n                label='Password' \n                type='password'\n                error={errors['password']}\n                iconClass='fas fa-key'\n                onChange={this.handleChange}\n                placeholder='Please enter your password...'\n                value={password}\n            /> \n            <Input \n                name='passwordRepeat' \n                type='password'\n                label='Repeat Password' \n                error={errors['passwordRepeat']}\n                iconClass='fas fa-key'\n                onChange={this.handleChange}\n                placeholder='Repeat your password...'\n                value={passwordRepeat}\n            /> \n            { authMessage || passwordError ? <p className='bg-info text-white'> {authMessage} {passwordError}</p> : <> </>}\n            <button type='submit' className='btn special-btn' disabled={this.validate()}>  Sign Up </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return { \n    loggedIn: state.auth.loggedIn,\n    authMessage: state.auth.authMessage\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))  \n  }\n}\n\n \nexport default connect(mapStateToProps, mapDispatchToProps) (RegisterForm);*/"]},"metadata":{},"sourceType":"module"}