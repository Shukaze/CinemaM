{"ast":null,"code":"import _defineProperty from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\src\\\\pages\\\\Movies\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { search, categorize, filterRating } from '../../Utils';\nimport { MoviesTable, Pagination } from '../../components';\nimport { Input, Loading, ListGroup } from '../../components/common';\nimport { getMovies as _getMovies } from '../../actions/moviesAction';\nimport { getGenres as _getGenres } from '../../actions/genreAction';\n\nvar Movies = /*#__PURE__*/function (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      genres: [],\n      pageSize: 12,\n      currentPage: 1,\n      currentGenre: 'All',\n      searchFilter: '',\n      rating: 0\n    };\n\n    _this.handleChange = function (name, value) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"currentPage\", 1), _this$setState));\n    };\n\n    _this.onPageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getMovies();\n      this.props.getGenres();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          currentGenre = _this$state.currentGenre,\n          currentPage = _this$state.currentPage,\n          searchFilter = _this$state.searchFilter,\n          pageSize = _this$state.pageSize,\n          rating = _this$state.rating;\n      var _this$props = this.props,\n          movies = _this$props.movies,\n          genres = _this$props.genres,\n          loggedIn = _this$props.loggedIn;\n      var filteredMovies = [];\n\n      if (_.isEmpty(movies)) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"background-container pt-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 14\n          }\n        }, \" \", /*#__PURE__*/React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 58\n          }\n        }), \" \");\n      }\n      /* Checking for searched item if nothing searched it will just set it to allMovies*/\n\n\n      filteredMovies = search(movies, searchFilter, 'title');\n      filteredMovies = categorize(filteredMovies, currentGenre);\n      filteredMovies = filterRating(filteredMovies, rating);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"background-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mx-5 py-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-2 col-sm-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"text-muted text-left p-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, \"Filters\"), /*#__PURE__*/React.createElement(ListGroup, {\n        active: currentGenre,\n        onChange: function onChange(val) {\n          return _this2.handleChange('currentGenre', val);\n        },\n        options: genres,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        onChange: function onChange(val) {\n          return _this2.handleChange('rating', val.target.value);\n        },\n        label: 'Rating',\n        min: 0,\n        max: 10,\n        placeholder: \"0-10\",\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-10 col-sm-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        onChange: function onChange(event) {\n          return _this2.handleChange('searchFilter', event.target.value);\n        },\n        label: \"Search Movie\",\n        iconClass: \"fas fa-search\",\n        placeholder: \"Search...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-left text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, \" \", !!filteredMovies.length ? \"\".concat(filteredMovies.length) : '0', \" movies found.\"), !!filteredMovies ? /*#__PURE__*/React.createElement(MoviesTable, {\n        pageSize: pageSize,\n        currentPage: currentPage,\n        movies: filteredMovies,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }) : /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, \"No Movies\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Pagination, {\n        itemsCount: filteredMovies.length,\n        pageSize: pageSize,\n        onPageChange: this.onPageChange,\n        currentPage: currentPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movies: state.movie.movies,\n    genres: state.genre.genres,\n    loggedIn: state.auth.loggedIn\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getMovies: function getMovies() {\n      return dispatch(_getMovies());\n    },\n    getGenres: function getGenres() {\n      return dispatch(_getGenres());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);","map":{"version":3,"sources":["D:/iCinema-master/iCinema-master/frontend/src/pages/Movies/index.js"],"names":["React","Component","connect","_","search","categorize","filterRating","MoviesTable","Pagination","Input","Loading","ListGroup","getMovies","getGenres","Movies","state","genres","pageSize","currentPage","currentGenre","searchFilter","rating","handleChange","name","value","setState","onPageChange","page","props","movies","loggedIn","filteredMovies","isEmpty","val","target","event","length","mapStateToProps","movie","genre","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { search, categorize, filterRating } from '../../Utils';\nimport { MoviesTable, Pagination } from '../../components';\nimport { Input, Loading, ListGroup } from '../../components/common';\n\nimport { getMovies } from '../../actions/moviesAction';\nimport { getGenres } from '../../actions/genreAction';\n\nclass Movies extends Component {\n  state = {\n    genres: [],\n    pageSize: 12,\n    currentPage: 1,\n    currentGenre: 'All',\n    searchFilter: '',\n    rating: 0\n  };\n\n  componentDidMount() {\n    this.props.getMovies();\n    this.props.getGenres();\n  }\n\n  handleChange = (name, value) => {\n    this.setState({ [name]: value, currentPage: 1 });\n  }\n  onPageChange = (page) => {\n    this.setState({ currentPage: page });\n  }\n\n  render() {\n    const {\n      currentGenre,\n      currentPage,\n      searchFilter,\n      pageSize,\n      rating\n    } = this.state;\n\n    const { movies, genres, loggedIn } = this.props;\n    let filteredMovies = [];\n\n    if (_.isEmpty(movies)) {\n      return <div className='background-container pt-5'> <Loading /> </div>\n    }\n\n    /* Checking for searched item if nothing searched it will just set it to allMovies*/\n    filteredMovies = search(movies, searchFilter, 'title');\n    filteredMovies = categorize(filteredMovies, currentGenre);\n    filteredMovies = filterRating(filteredMovies, rating);\n    return (\n      <div className='background-container'>\n        <div className='mx-5 py-5'>\n          <div className='row'>\n            <div className='col-lg-2 col-sm-12'>\n              <h4 className='text-muted text-left p-1'>Filters</h4>\n              <ListGroup active={currentGenre} onChange={val => this.handleChange('currentGenre', val)} options={genres} />\n              <Input onChange={val => this.handleChange('rating', val.target.value)} label={'Rating'} min={0} max={10} placeholder='0-10' type='number' />\n              {/* { loggedIn && <Link to='/movies/new' className='btn btn-primary btn-block my-2 text-white'> Add Movie </Link> } */}\n              {/* <Rating total={5} filled={rating} onChange={val => this.handleChange('rating', val)}/> */}\n            </div>\n\n            <div className='col-lg-10 col-sm-12'>\n              <Input onChange={event => this.handleChange('searchFilter', event.target.value)} label='Search Movie' iconClass='fas fa-search' placeholder='Search...' />\n              <p className='text-left text-muted'> {!!filteredMovies.length ? `${filteredMovies.length}` : '0'} movies found.</p>\n              {\n                !!filteredMovies\n                  ? <MoviesTable pageSize={pageSize} currentPage={currentPage} movies={filteredMovies} />\n                  : <h1 className='text-white'>No Movies</h1>\n              }\n              <br />\n              <Pagination\n                itemsCount={filteredMovies.length}\n                pageSize={pageSize}\n                onPageChange={this.onPageChange}\n                currentPage={currentPage}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movie.movies,\n    genres: state.genre.genres,\n    loggedIn: state.auth.loggedIn\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getMovies: () => dispatch(getMovies()),\n    getGenres: () => dispatch(getGenres())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);\n"]},"metadata":{},"sourceType":"module"}