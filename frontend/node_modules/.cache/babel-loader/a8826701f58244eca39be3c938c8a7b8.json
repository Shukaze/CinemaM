{"ast":null,"code":"import _classCallCheck from \"D:\\\\Margo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Margo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Margo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Margo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Margo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Margo\\\\frontend\\\\src\\\\pages\\\\ChatPage\\\\ChatPage.js\";\nimport React, { Component } from 'react';\nimport Icon from '@ant-design/icons';\nimport { Form, Row, Col, Button, Input } from 'antd';\nimport io from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nexport var ChatPage = /*#__PURE__*/function (_Component) {\n  _inherits(ChatPage, _Component);\n\n  function ChatPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      chatMessage: \"\"\n    };\n\n    _this.hanleSearchChange = function (e) {\n      _this.setState({\n        chatMessage: e.target.value\n      });\n    };\n\n    _this.submitChatMessage = function (e) {\n      e.preventDefault();\n      var chatMessage = _this.state.chatMessage;\n      var userId = _this.props.auth.userData._id;\n      var username = _this.props.auth.userData.username;\n      var nowTime = moment();\n\n      _this.socket.emit(\"Input Chat Message\", {\n        chatMessage: chatMessage,\n        userId: userId,\n        username: username,\n        nowTime: nowTime\n      });\n\n      _this.setState({\n        chatMessage: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var server = \"http://localhost:5000\";\n      this.socket = io(server);\n      this.socket.on(\"Output Chat Message\", function (messageFromBackEnd) {\n        console.log(messageFromBackEnd);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontSize: '2rem',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, \" Real Time Chat\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxWidth: '800px',\n          margin: '0 auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"infinite-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.messagesEnd = el;\n        },\n        style: {\n          float: \"left\",\n          clear: \"both\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        layout: \"inline\",\n        onSubmit: this.submitChatMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 18,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        id: \"message\",\n        prefix: /*#__PURE__*/React.createElement(Icon, {\n          type: \"message\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 45\n          }\n        }),\n        placeholder: \"Let's start talking\",\n        type: \"text\",\n        value: this.state.chatMessage,\n        onChange: this.hanleSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        span: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          width: '100%'\n        },\n        onClick: this.submitChatMessage,\n        htmlType: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"enter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 37\n        }\n      })))))));\n    }\n  }]);\n\n  return ChatPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(ChatPage);","map":{"version":3,"sources":["D:/Margo/frontend/src/pages/ChatPage/ChatPage.js"],"names":["React","Component","Icon","Form","Row","Col","Button","Input","io","connect","moment","ChatPage","state","chatMessage","hanleSearchChange","e","setState","target","value","submitChatMessage","preventDefault","userId","props","auth","userData","_id","username","nowTime","socket","emit","server","on","messageFromBackEnd","console","log","fontSize","textAlign","maxWidth","margin","el","messagesEnd","float","clear","color","width","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Icon from '@ant-design/icons';\nimport { Form, Row, Col, Button, Input} from 'antd';\nimport io from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport  moment  from \"moment\";\n\nexport class ChatPage extends Component {\n    state= {\n        chatMessage: \"\",\n    }\n\n    componentDidMount() {\n        let server = \"http://localhost:5000\";\n\n        this.socket = io(server);\n\n        this.socket.on(\"Output Chat Message\", messageFromBackEnd => {\n            console.log(messageFromBackEnd)\n        })\n    }\n\n    hanleSearchChange =(e) => {\n        this.setState({\n            chatMessage: e.target.value\n        })\n    }\n\n    submitChatMessage = (e) => {\n        e.preventDefault();\n\n        let chatMessage = this.state.chatMessage\n        let userId = this.props.auth.userData._id\n        let username = this.props.auth.userData.username;\n        let nowTime = moment();\n\n        this.socket.emit(\"Input Chat Message\", {\n            chatMessage,\n            userId,\n            username,\n            nowTime\n        });\n        this.setState({ chatMessage: \"\" })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div>\n                    <p style={{ fontSize: '2rem', textAlign: 'center' }}> Real Time Chat</p>\n                </div>\n\n                <div style={{ maxWidth: '800px', margin: '0 auto' }}>\n                    <div className=\"infinite-container\">\n                        {/* {this.props.chats && (\n                            <div>{this.renderCards()}</div>\n                        )} */}\n                        <div\n                            ref={el => {\n                                this.messagesEnd = el;\n                            }}\n                            style={{ float: \"left\", clear: \"both\" }}\n                        />\n                    </div>\n\n                    <Row >\n                        <Form layout=\"inline\" onSubmit={this.submitChatMessage}>\n                            <Col span={18}>\n                                <Input\n                                    id=\"message\"\n                                    prefix={<Icon type=\"message\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Let's start talking\"\n                                    type=\"text\"\n                                    value={this.state.chatMessage}\n                                    onChange={this.hanleSearchChange}\n                                />\n                            </Col>\n                            <Col span={2}>\n                                \n                            </Col>\n\n                            <Col span={4}>\n                                <Button type=\"primary\"  style={{ width: '100%' }} onClick={this.submitChatMessage}  htmlType=\"submit\">\n                                    <Icon type=\"enter\" />\n                                </Button>\n                            </Col>\n                        </Form>\n                    </Row>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\n\nexport default connect(mapStateToProps)(ChatPage);\n"]},"metadata":{},"sourceType":"module"}