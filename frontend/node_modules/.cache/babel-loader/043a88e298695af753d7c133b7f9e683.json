{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\src\\\\components\\\\Navbar\\\\index.js\";\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut as _signOut } from '../../actions/authAction';\nimport './style.css';\n\nfunction toggleNav(e) {\n  var slider = document.getElementsByClassName('slider')[0];\n  var burger = document.getElementsByClassName('burger')[0];\n  var list = document.getElementsByClassName('list')[0];\n  document.getElementById('root').style.overflow = 'hidden';\n  burger.classList.toggle('burger-active');\n  slider.classList.toggle('active');\n  list.childNodes.forEach(function (e, index) {\n    if (e.style.animation) e.style.animation = '';else e.style.animation = \"listItemFade 0.5s ease forwards \".concat(index / 5 + 0.3, \"s\");\n  });\n}\n\nvar Navbar = function Navbar(props) {\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"nav-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"burger\",\n    onClick: function onClick(e) {\n      return toggleNav(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: function onClick() {\n      return toggleNav();\n    },\n    to: \"/movies\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Home\"), !props.loggedIn ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    onClick: function onClick() {\n      return toggleNav();\n    },\n    to: \"/login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Link, {\n    onClick: function onClick() {\n      return toggleNav();\n    },\n    to: \"/resigter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Register\")) : /*#__PURE__*/React.createElement(Link, {\n    onClick: function onClick() {\n      toggleNav();\n      props.signOut();\n    },\n    to: \"/#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Log out\"))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loggedIn: state.auth.loggedIn\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signOut: function signOut() {\n      return dispatch(_signOut());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","map":{"version":3,"sources":["D:/iCinema-master/iCinema-master/frontend/src/components/Navbar/index.js"],"names":["React","Link","connect","signOut","toggleNav","e","slider","document","getElementsByClassName","burger","list","getElementById","style","overflow","classList","toggle","childNodes","forEach","index","animation","Navbar","props","loggedIn","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { signOut } from '../../actions/authAction';\nimport './style.css';\n\nfunction toggleNav(e) {\n  const slider = document.getElementsByClassName('slider')[0];\n  const burger = document.getElementsByClassName('burger')[0];\n  const list = document.getElementsByClassName('list')[0];\n  document.getElementById('root').style.overflow = 'hidden';\n  burger.classList.toggle('burger-active')\n  slider.classList.toggle('active')\n  list.childNodes.forEach((e, index) => {\n    if (e.style.animation)\n      e.style.animation = ''\n    else\n      e.style.animation = `listItemFade 0.5s ease forwards ${index / 5 + 0.3}s`;\n  });\n}\nconst Navbar = props => {\n  return (\n    <nav className=\"nav-wrapper\">\n      <div className=\"burger\" onClick={e => toggleNav(e)}>\n        <div className='line1'></div>\n        <div className='line2'></div>\n        <div className='line3'></div>\n      </div>\n      {/* <Link className=\"nav-brand\" to=\"/\">iCinema</Link> */}\n      <div className='slider'>\n        <ul className='list'>\n          <Link onClick={() => toggleNav()} to=\"/movies\">Home</Link>\n          {!props.loggedIn ? <>\n            <Link onClick={() => toggleNav()} to=\"/login\">Login</Link>\n            <Link onClick={() => toggleNav()} to=\"/resigter\">Register</Link>\n          </>\n            : <Link onClick={() => { toggleNav(); props.signOut() }} to=\"/#\">Log out</Link>\n          }\n        </ul>\n      </div>\n    </nav>\n  )\n}\nconst mapStateToProps = state => {\n  return {\n    loggedIn: state.auth.loggedIn\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);"]},"metadata":{},"sourceType":"module"}