{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { LOGIN_SUCCESS, LOGIN_ERROR, SIGNOUT, SIGNUP_SUCCESS, SIGNUP_ERROR } from './actionTypes';\nimport Axios from 'axios';\nexport var signIn = function signIn(credentials) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Axios.post('/api/users/login', credentials);\n\n            case 3:\n              result = _context.sent;\n              dispatch({\n                type: LOGIN_SUCCESS,\n                payload: result\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: LOGIN_ERROR,\n                error: _context.t0\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport default {\n  login: function login(user) {\n    return fetch('/users/login', {\n      method: \"post\",\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      if (res.status !== 401) return res.json().then(function (data) {\n        return data;\n      });else return {\n        isAuthenticated: false,\n        user: {\n          username: \"\",\n          role: \"\"\n        }\n      };\n    });\n  },\n  register: function register(user) {\n    return fetch('/api/users/register', {\n      method: \"post\",\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return data;\n    });\n  },\n  logout: function logout() {\n    return fetch('/users/logout').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return data;\n    });\n  },\n  isAuthenticated: function isAuthenticated() {\n    return fetch('/users/authenticated').then(function (res) {\n      if (res.status !== 401) return res.json().then(function (data) {\n        return data;\n      });else return {\n        isAuthenticated: false,\n        user: {\n          username: \"\",\n          role: \"\"\n        }\n      };\n    });\n  }\n};\nexport var signUp = function signUp(credentials) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return Axios.post('/api/users/signup', credentials);\n\n            case 3:\n              result = _context2.sent;\n              dispatch({\n                type: SIGNUP_SUCCESS,\n                payload: result\n              });\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: SIGNUP_ERROR,\n                error: _context2.t0\n              });\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var signOut = function signOut() {\n  return function (dispatch) {\n    dispatch({\n      type: SIGNOUT\n    });\n  };\n};","map":{"version":3,"sources":["D:/iCinema-master/iCinema-master/frontend/src/actions/authAction.js"],"names":["LOGIN_SUCCESS","LOGIN_ERROR","SIGNOUT","SIGNUP_SUCCESS","SIGNUP_ERROR","Axios","signIn","credentials","dispatch","post","result","type","payload","error","login","user","fetch","method","body","JSON","stringify","headers","then","res","status","json","data","isAuthenticated","username","role","register","logout","signUp","signOut"],"mappings":"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","sourcesContent":["import { LOGIN_SUCCESS, LOGIN_ERROR, SIGNOUT, SIGNUP_SUCCESS, SIGNUP_ERROR } from './actionTypes';\nimport Axios from 'axios';\n\nexport const signIn = (credentials) => {\n  return async (dispatch) => {\n    try {\n      const result = await Axios.post('/api/users/login', credentials)\n      dispatch({ type: LOGIN_SUCCESS, payload: result })\n    }\n    catch (error) {\n      dispatch({ type: LOGIN_ERROR, error })\n    }\n  }\n}\n\nexport default {\n    login : user =>{\n      return fetch('/users/login', {\n        method : \"post\",\n        body: JSON.stringify(user),\n        headers: {\n          'Content-Type' : 'application/json'\n        }\n      }).then(res => {\n        if(res.status !== 401)\n           return res.json().then(data=>data);\n        else  \n          return {isAuthenticated : false, user : {username:\"\", role: \"\"}};\n      })\n\n    },\n    register : user =>{\n      return fetch('/api/users/register', {\n        method : \"post\",\n        body: JSON.stringify(user),\n        headers: {\n          'Content-Type' : 'application/json'\n        }\n      }).then(res => res.json())\n        .then(data => data);\n    },\n    logout : () =>{\n      return fetch('/users/logout')\n        .then(res => res.json())\n        .then(data => data);\n    },\n    isAuthenticated : () =>{\n      return fetch('/users/authenticated')\n      .then(res =>{\n        if(res.status !== 401)\n           return res.json().then(data=>data);\n        else  \n          return {isAuthenticated : false, user : {username:\"\", role: \"\"}};\n      }); \n    }\n}\n\n\n\nexport const signUp = (credentials) => {\n  return async (dispatch) => {\n    try {\n      const result = await Axios.post('/api/users/signup', credentials)\n      dispatch({ type: SIGNUP_SUCCESS, payload: result })\n    }\n    catch (error) {\n      dispatch({ type: SIGNUP_ERROR, error })\n    }\n  }\n}\n\n\nexport const signOut = () => {\n  return (dispatch) => { dispatch({ type: SIGNOUT }) }\n}\n"]},"metadata":{},"sourceType":"module"}